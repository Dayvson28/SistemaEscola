@page "/turmas"
@rendermode InteractiveServer
@using SistemaEscolar.Models
@using SistemaEscolar.Services
@inject TurmaService TurmaService
@inject NavigationManager Navigation

<PageTitle>Turmas</PageTitle>

<div class="container mt-1">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h3>Turmas</h3>
                <button type="button" class="btn btn-primary ms-2" @onclick="MostrarModalAddTurma">Add Turma</button>
            </div>

            @if (mostrarModalTurma)
            {
                <div class="modal-overlay" @onclick="FecharModalTurma">
                    <div class="modal-box" @onclick:stopPropagation="true">
                        <div class="card mb-0">
                            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">Adicionar Nova Turma</h5>
                                <button type="button" class="btn-close btn-close-white" aria-label="Fechar" @onclick="FecharModalTurma"></button>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <label class="form-label">Nome da Turma:</label>
                                    <input @bind="novaTurma.Nome" class="form-control" placeholder="Ex: 1º ano A" />
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Série:</label>
                                    <input @bind="novaTurma.Serie" class="form-control" placeholder="Ex: 1º ano" />
                                </div>
                            </div>
                            <div class="card-footer d-flex justify-content-end gap-2">
                                <button type="button" class="btn btn-secondary" @onclick="FecharModalTurma">Cancelar</button>
                                <button type="button" class="btn btn-success" @onclick="AdicionarTurma">Salvar</button>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <div class="row justify-content-center">
                <div class="col-12 mb-4">
                    <div class="card">
                        <div class="card-header bg-primary text-white text-center">
                            <h5 class="mb-0">Turmas Cadastradas</h5>
                        </div>
                        <div class="card-body">
                            <div class="row justify-content-center">
                                @foreach(var turma in todasTurmas)
                                {
                                    <div class="col-md-4 mb-3 d-flex align-items-stretch">
                                        <a href="/turma/@turma.Id" class="text-decoration-none card-link w-100">
                                            <div class="card h-100 border-primary turma-card">
                                                <div class="card-body text-center">
                                                    <h5 class="card-title">@turma.Nome</h5>
                                                    <p class="card-text">Série: @turma.Serie</p>
                                                    <p class="card-text">Estudantes: @turma.QuantidadeEstudantes</p>
                                                </div>
                                            </div>
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .turma-card {
        cursor: pointer;
        transition: all 0.3s;
    }
    .card-link:hover .turma-card {
        transform: scale(1.03);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }
    .modal-overlay {
        position: fixed;
        inset: 0;
        background: rgba(0,0,0,.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1050;
    }
    .modal-box {
        background: #fff;
        border-radius: .5rem;
        width: 100%;
        max-width: 600px;
        box-shadow: 0 10px 30px rgba(0,0,0,.2);
    }
</style>

@code{
    private List<Turma> turmasPrimeiro = new(); // Armazena as turmas do 1º Ano
    private List<Turma> todasTurmas = new(); // Armazena todas as turmas
    private Dictionary<string, int> estatisticas = new(); // Armazena as estatísticas de estudantes por série
    private bool mostrarModalTurma = false; // Controla a exibição do modal de adicionar turma
    private Turma novaTurma = new(); // Armazena os dados da nova turma
    
    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;

    protected override void OnInitialized() // Carrega os dados ao inicializar o componente
    {
        CarregarDados();
    }

    private void CarregarDados()
    {
        turmasPrimeiro = TurmaService.ObterTurmasPorSerie("1º Ano"); // Obtém as turmas do 1º Ano
        todasTurmas = TurmaService.ObterTodasTurmas(); // Obtém todas as turmas
        estatisticas = TurmaService.ObterEstatisticasPorSerie(); // Obtém as estatísticas de estudantes por série
    }

    private void MostrarModalAddTurma()
    {
        novaTurma = new Turma(); // Limpa os dados da nova turma
        mostrarModalTurma = true; // Exibe o modal
        StateHasChanged(); // Força a atualização da UI
    }

    private void FecharModalTurma()
    {
        mostrarModalTurma = false; // Oculta o modal
        StateHasChanged(); // Força a atualização da UI
    }

    private void AdicionarTurma()
    {
        if (string.IsNullOrWhiteSpace(novaTurma.Nome) || string.IsNullOrWhiteSpace(novaTurma.Serie))
        {
            return; // Validação simples: não permite nome ou série vazios
        }

        TurmaService.AdicionarTurma(novaTurma); // Adiciona a nova turma
        FecharModalTurma(); // Fecha o modal
        CarregarDados(); // Recarrega os dados
        StateHasChanged(); // Força a atualização da UI
    }

    private void VerDetalhesTurma(int turmaId)
    {
        NavigationManager.NavigateTo($"/turma/{turmaId}"); // Navega para a página de detalhes da turma
    }
}